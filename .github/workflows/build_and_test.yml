# ======================================================================================
#
# ░▒▓███████▓▒░░▒▓████████▓▒░▒▓███████▓▒░       ░▒▓███████▓▒░ ░▒▓██████▓▒░▒▓████████▓▒░
# ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░
# ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░
# ░▒▓███████▓▒░░▒▓██████▓▒░ ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓███████▓▒░░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░
# ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░
# ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░
# ░▒▓███████▓▒░░▒▓████████▓▒░▒▓█▓▒░░▒▓█▓▒░      ░▒▓███████▓▒░ ░▒▓██████▓▒░  ░▒▓█▓▒░
#
# ======================================================================================

name: Build & test (internal)

on:
  workflow_call:
    inputs:
      dashboard_type:
        description: Type of CTest dashboard to run (Nightly, Experimental, or Continuous)
        type: string
        required: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:

  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-15]
        config: [Debug, Release]
        preset: [clang]
        include:
        - os: windows-latest
          preset: msvc
          config: Debug
        - os: windows-latest
          preset: msvc
          config: Release
        - os: ubuntu-latest
          preset: gcc
          config: Debug
        - os: ubuntu-latest
          preset: gcc
          config: Release
    runs-on: ${{ matrix.os }}
    name: Build and test (${{ matrix.os }}.${{ matrix.preset }}.${{ matrix.config }}.${{ inputs.dashboard_type }})
    timeout-minutes: 30
    env:
      CMAKE_OSX_ARCHITECTURES: arm64;x86_64
      CMAKE_BUILD_PARALLEL_LEVEL: 8
      CTEST_PARALLEL_LEVEL: 0
      CTEST_NO_TESTS_ACTION: error
      CTEST_OUTPUT_ON_FAILURE: 1
      BUILD_DIR: Builds/${{ matrix.preset }}
      DEPLOY_DIR: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Python dependencies
      run: cmake -P .github/scripts/InstallPythonDeps.cmake

    - name: Configure CMake
      env:
        BUILD_NAME: ${{ github.head_ref || github.ref_name }}.${{ matrix.os }}.${{ matrix.preset }}.${{ matrix.config }}
      run: cmake --preset ${{ matrix.preset }} -D BENBOT_DOCS=OFF -D BUILDNAME=${{ env.BUILD_NAME }}

    - name: Build and test
      run: ctest -D ${{ inputs.dashboard_type }} -C ${{ matrix.config }} --output-junit junit.xml
      working-directory: ${{ env.BUILD_DIR }}

    - name: Upload JUnit report
      uses: mikepenz/action-junit-report@6246d2426ab5545e5ec212f995f3981825def42b # pin v5
      if: always() && github.event_name == 'pull_request'
      with:
        report_paths: ${{ env.BUILD_DIR }}/junit.xml
        exclude_sources: ${{ env.BUILD_DIR }}
        check_annotations: true
        detailed_summary: true
        flaky_summary: true
        include_time_in_summary: true
        simplified_summary: true
        comment: true
        skip_comment_without_tests: true
        updateComment: false

    - name: Run cmake install
      if: always() && matrix.config == 'Release'
      run: cmake --install ${{ env.BUILD_DIR }} --prefix ${{ env.DEPLOY_DIR }} --component ben_bot --config ${{ matrix.config }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      if: always() && matrix.config == 'Release'
      with:
        name: BenBot-${{ matrix.os }}-${{ matrix.preset }}
        path: ${{ env.DEPLOY_DIR }}
        if-no-files-found: error
